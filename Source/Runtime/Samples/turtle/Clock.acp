<?xml version="1.0" encoding="UTF-8"?>
<Root Mode="0" Caption="Draw a Sum" Comment="" Enabled="true" Expanded="true" FileType="AutoCode" Language="Python" Source="" W="100" H="440" E="0" X="65" Y="64"><CODE Mode="210" Caption="" Source="import turtle&#xA;from datetime import *" Comment="" Enabled="true" Expanded="false" Text="import turtle&#xA;" W="100" H="44" E="0" X="65" Y="64"/><FUNCTION Mode="1201" Caption="Skip(step)" Enabled="true" Comment="抬起画笔，向前运动一段距离放下" Expanded="false" Source="" W="100" H="44" E="0" X="65" Y="108"><CODE Mode="210" Caption="" Source="turtle.penup()&#xA;turtle.forward(step)&#xA;turtle.pendown()" Comment="" Enabled="true" Expanded="false" Text="turtle.penup()&#xA;"/></FUNCTION><FUNCTION Mode="1201" Caption="mkHand(name, length)" Enabled="true" Comment="" Expanded="false" Source="" W="100" H="44" E="0" X="65" Y="152"><CODE Mode="210" Caption="" Source="# 注册Turtle形状，建立表针Turtle&#xA;turtle.reset()&#xA;Skip(-length * 0.1)&#xA;# 开始记录多边形的顶点。当前的乌龟位置是多边形的第一个顶点。&#xA;turtle.begin_poly()&#xA;turtle.forward(length * 1.1)&#xA;# 停止记录多边形的顶点。当前的乌龟位置是多边形的最后一个顶点。将与第一个顶点相连。&#xA;turtle.end_poly()&#xA;# 返回最后记录的多边形。&#xA;handForm = turtle.get_poly()&#xA;turtle.register_shape(name, handForm)" Comment="" Enabled="true" Expanded="false" Text="# 注册Turtle形状，建立表针Turtle&#xA;"/></FUNCTION><FUNCTION Mode="1201" Caption="Init()" Enabled="true" Comment="" Expanded="false" Source="" W="100" H="44" E="0" X="65" Y="196"><CODE Mode="210" Caption="" Source="global secHand, minHand, hurHand, printer&#xA;# 重置Turtle指向北&#xA;turtle.mode(&quot;logo&quot;)&#xA;# 建立三个表针Turtle并初始化&#xA;mkHand(&quot;secHand&quot;, 135)&#xA;mkHand(&quot;minHand&quot;, 125)&#xA;mkHand(&quot;hurHand&quot;, 90)&#xA;secHand = turtle.Turtle()&#xA;secHand.shape(&quot;secHand&quot;)&#xA;minHand = turtle.Turtle()&#xA;minHand.shape(&quot;minHand&quot;)&#xA;hurHand = turtle.Turtle()&#xA;hurHand.shape(&quot;hurHand&quot;)" Comment="" Enabled="true" Expanded="false" Text="global secHand, minHand, hurHand, printer&#xA;"/><FOR Mode="501" Caption="" Source="hand in secHand, minHand, hurHand" Comment="" Enabled="true" Expanded="false"><circle Mode="217" Caption="" Source="" Comment="" Expanded="false" Enabled="true"><CODE Mode="210" Caption="" Source="hand.shapesize(1, 1, 3)&#xA;hand.speed(0)" Comment="" Enabled="true" Expanded="false" Text="hand.shapesize(1, 1, 3)&#xA;"/></circle></FOR><CODE Mode="210" Caption="" Source="# 建立输出文字Turtle&#xA;printer = turtle.Turtle()&#xA;# 隐藏画笔的turtle形状&#xA;printer.hideturtle()&#xA;printer.penup()" Comment="" Enabled="true" Expanded="false" Text="# 建立输出文字Turtle&#xA;"/></FUNCTION><FUNCTION Mode="1201" Caption="SetupClock(radius)" Enabled="true" Comment="" Expanded="false" Source="" W="100" H="44" E="0" X="65" Y="240"><CODE Mode="210" Caption="" Source="turtle.reset()&#xA;turtle.pensize(7)" Comment="建立表的外框" Enabled="true" Expanded="false" Text="turtle.reset()&#xA;"/><FOR Mode="501" Caption="" Source="i in range(60)" Comment="" Enabled="true" Expanded="false"><circle Mode="217" Caption="" Source="" Comment="" Expanded="false" Enabled="true"><CODE Mode="210" Caption="" Source="Skip(radius)" Comment="" Enabled="true" Expanded="false" Text="Skip(radius)&#xA;"/><IF Mode="301" Caption="i % 5 == 0" Source="i % 5 == 0" Comment="" Enabled="true" Expanded="false"><YES Mode="303" Caption="" Source="" Comment="" Expanded="false" Enabled="true"><CODE Mode="210" Caption="" Source="turtle.forward(20)&#xA;Skip(-radius - 20)&#xA;&#xA;Skip(radius + 20)" Comment="" Enabled="true" Expanded="false" Text="turtle.forward(20)&#xA;"/><IF Mode="301" Caption="" Source="i == 0" Comment="" Enabled="true" Expanded="false"><YES Mode="303" Caption="" Source="" Comment="" Expanded="false" Enabled="true"><CODE Mode="210" Caption="" Source="turtle.write(int(12), align=&quot;center&quot;, font=(&quot;Courier&quot;, 14, &quot;bold&quot;))" Comment="" Enabled="true" Expanded="false" Text="turtle.write(int(12), align=&quot;center&quot;, font=(&quot;Courier&quot;, 14, &quot;bold&quot;))&#xA;"/></YES><ELIF Mode="308" Caption="" Source="i == 30" Comment="" Enabled="true" Expanded="false"><CODE Mode="210" Caption="" Source="Skip(25)&#xA;turtle.write(int(i/5), align=&quot;center&quot;, font=(&quot;Courier&quot;, 14, &quot;bold&quot;))&#xA;Skip(-25)" Comment="" Enabled="true" Expanded="false" Text="Skip(25)&#xA;"/></ELIF><ELIF Mode="308" Caption="" Source=" (i == 25 or i == 35)" Comment="" Enabled="true" Expanded="false"><CODE Mode="210" Caption="" Source="Skip(20)&#xA;turtle.write(int(i/5), align=&quot;center&quot;, font=(&quot;Courier&quot;, 14, &quot;bold&quot;))&#xA;Skip(-20)" Comment="" Enabled="true" Expanded="false" Text="Skip(20)&#xA;"/></ELIF><NO Mode="304" Caption="" Source="" Comment="" Expanded="false" Enabled="true"><CODE Mode="210" Caption="" Source="turtle.write(int(i/5), align=&quot;center&quot;, font=(&quot;Courier&quot;, 14, &quot;bold&quot;))" Comment="" Enabled="true" Expanded="false" Text="turtle.write(int(i/5), align=&quot;center&quot;, font=(&quot;Courier&quot;, 14, &quot;bold&quot;))&#xA;"/></NO></IF><CODE Mode="210" Caption="" Source="Skip(-radius - 20)" Comment="" Enabled="true" Expanded="false" Text="Skip(-radius - 20)&#xA;"/></YES><NO Mode="304" Caption="" Source="" Comment="" Expanded="false" Enabled="true"><CODE Mode="210" Caption="" Source="turtle.dot(5)&#xA;Skip(-radius)" Comment="" Enabled="true" Expanded="false" Text="turtle.dot(5)&#xA;"/></NO></IF><CODE Mode="210" Caption="" Source="turtle.right(6)" Comment="" Enabled="true" Expanded="false" Text="turtle.right(6)&#xA;"/></circle></FOR></FUNCTION><FUNCTION Mode="1201" Caption="Week(t)" Enabled="true" Comment="" Expanded="false" Source="" W="100" H="44" E="0" X="65" Y="284"><CODE Mode="210" Caption="" Source="week = [&quot;星期一&quot;, &quot;星期二&quot;, &quot;星期三&quot;,&quot;星期四&quot;, &quot;星期五&quot;, &quot;星期六&quot;, &quot;星期日&quot;]&#xA;return week[t.weekday()]" Comment="" Enabled="true" Expanded="false" Text="week = [&quot;星期一&quot;, &quot;星期二&quot;, &quot;星期三&quot;,&quot;星期四&quot;, &quot;星期五&quot;, &quot;星期六&quot;, &quot;星期日&quot;]&#xA;"/></FUNCTION><FUNCTION Mode="1201" Caption="Date(t)" Enabled="true" Comment="" Expanded="false" Source="" W="100" H="44" E="0" X="65" Y="328"><CODE Mode="210" Caption="" Source="y = t.year&#xA;m = t.month&#xA;d = t.day&#xA;return &quot;%s %d %d&quot; % (y, m, d)" Comment="" Enabled="true" Expanded="false" Text="y = t.year&#xA;"/></FUNCTION><FUNCTION Mode="1201" Caption="Tick()" Enabled="true" Comment="" Expanded="false" Source="" W="100" H="44" E="0" X="65" Y="372"><CODE Mode="210" Caption="" Source="# 绘制表针的动态显示&#xA;t = datetime.today()&#xA;second = t.second + t.microsecond * 0.000001&#xA;minute = t.minute + second / 60.0&#xA;hour = t.hour + minute / 60.0&#xA;secHand.setheading(6 * second)&#xA;minHand.setheading(6 * minute)&#xA;hurHand.setheading(30 * hour)&#xA;&#xA;turtle.tracer(False)&#xA;printer.forward(65)&#xA;printer.write(Week(t), align=&quot;center&quot;,&#xA;font=(&quot;Courier&quot;, 14, &quot;bold&quot;))&#xA;printer.back(130)&#xA;printer.write(Date(t), align=&quot;center&quot;,&#xA;font=(&quot;Courier&quot;, 14, &quot;bold&quot;))&#xA;printer.home()&#xA;turtle.tracer(True)&#xA;&#xA;# 100ms后继续调用tick&#xA;turtle.ontimer(Tick, 100)" Comment="" Enabled="true" Expanded="false" Text="# 绘制表针的动态显示&#xA;"/></FUNCTION><FUNCTION Mode="1201" Caption="main()" Enabled="true" Comment="" Expanded="false" Source="" W="100" H="44" E="0" X="65" Y="416"><CODE Mode="210" Caption="" Source="# 打开/关闭龟动画，并为更新图纸设置延迟。&#xA;turtle.tracer(False)&#xA;Init()&#xA;SetupClock(160)&#xA;turtle.tracer(True)&#xA;Tick()&#xA;turtle.mainloop()" Comment="" Enabled="true" Expanded="false" Text="# 打开/关闭龟动画，并为更新图纸设置延迟。&#xA;"/></FUNCTION><IF Mode="301" Caption="" Source="__name__ == &quot;__main__&quot;" Comment="" Enabled="true" Expanded="false" W="100" H="44" E="0" X="65" Y="460"><YES Mode="303" Caption="" Source="" Comment="" Expanded="false"><CODE Mode="210" Caption="" Source="main()" Comment="" Enabled="true" Expanded="false" Text="main()&#xA;"/></YES><NO Mode="304" Caption="" Source="" Comment="" Expanded="false"/></IF></Root>
